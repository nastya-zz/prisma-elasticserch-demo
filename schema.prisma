model Post {
  id        Int      @default(autoincrement()) @id
  title     String
  content   String
  show      Boolean
  author    User  @relation(fields: [authorId], references: [id])
  authorId  Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  @@map("post")
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}
generator prismaClassGenerator {
    provider = "prisma-class-generator"
    dryRun = false
    output = "./src/generated/prisma-class"
    useSwagger = true
    makeIndexFile = false
    seperateRelationFields = true
}
model User {
    id            Int       @default(autoincrement()) @id
    email         String      @unique
    name          String
    posts         Post[]
    password      String
    address       Address?
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt @default(now())
    isActive      Boolean  @default(true)

    @@map("user")
    @@unique([email, id])
}

model Address {
    id              Int         @default(autoincrement()) @id
    show            Boolean     @default(false)
    address         String
    user            User        @relation(fields: [userId], references: [id])
    userId          Int         @unique

    /// @DtoCreateOptional
    coordinateX     String?
    coordinateY     String?

    @@map("address")
    @@unique([id, userId])
}